<% content_for :secondary_navigation do %>
  <li><%= link_to t(:index, :scope => [:menu]), factory_formula_elements_path %></li>
  <li><%= link_to t(:new, :scope => [:menu]), new_factory_formula_element_path %></li>
  <li class="active"><%= link_to t(:report, :scope => [:menu, :formula_element]), report_factory_formula_elements_path %></li>
<% end %>

<%= form_for @search, :url => report_factory_formula_elements_path, :html => { :method => :get, :class => 'form-inline' } do |f| %>
  Desde <%= f.date_select :updated_at_gteq, {}, :class => 'span1' %> hasta
  <%= f.date_select :updated_at_lteq, {}, :class => 'span1' %>
  <%= f.submit t(:filter, :scope => [:actions]), :class => 'btn' %>
<% end %>
<hr>

<table class="">
  <tbody>
    <% @formula_elements.each do |formula_element| %>
      <tr>
        <td><%= formula_element.formula_element_name %></td>
        <td class="amount"><%= number_with_precision formula_element.consumed_stock %> Kg</td>
      </tr>
    <% end %>
  </tbody>
  <tfoot>
    <tr>
      <td>
        <h4>Total</h4>
      </td>
      <td class="amount">
         <b><%= number_with_delimiter @formula_elements.inject(0.0){|sum, item| sum = sum + item.consumed_stock}.round %> Kg</b>
      </td>
    </tr>
  </tfoot>
</table>

<div class="well">
  <button type="button" name="button" class="print-btn btn btn-large btn-success"><%= t(:print, :scope => :actions) %></button>
  <%= link_to t(:export, :scope => :actions), report_factory_formula_elements_path(format: :csv, q: params[:q]), :class => 'btn btn-large btn-success' %>
</div>

<% content_for :print_section do %>
  <h2>Reporte de materia prima</h2>
  <% if params[:q].present? %>
    <b>
      Desde <%= date_parts_to_date(params[:q], 'updated_at_gteq') %> hasta
      <%= date_parts_to_date(params[:q], 'updated_at_lteq') %>
    </b>
  <% end %>

  <table class="">
    <tbody>
      <% @formula_elements.each do |formula_element| %>
        <tr>
          <td><%= formula_element.formula_element_name %></td>
          <td class="amount"><%= number_with_precision formula_element.consumed_stock %> Kg</td>
        </tr>
      <% end %>
    </tbody>
    <tfoot>
      <tr>
        <td>
          <h4>Total</h4>
        </td>
        <td class="amount">
           <b><%= number_with_delimiter @formula_elements.inject(0.0){|sum, item| sum = sum + item.consumed_stock}.round %> Kg</b>
        </td>
      </tr>
    </tfoot>
  </table>
<% end %>
